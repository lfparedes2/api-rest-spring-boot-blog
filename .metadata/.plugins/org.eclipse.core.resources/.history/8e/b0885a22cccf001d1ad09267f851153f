package com.sistema.blog.excepciones;

import java.util.Date;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.sistema.blog.dto.ErrorDetalles;

@ControllerAdvice
public class GlobalExcepcionHandler extends ResponseEntityExceptionHandler{
	
	@ExceptionHandler(ResourceNotFoundExcepcion.class)
	public ResponseEntity<ErrorDetalles> manejarResourceNotFounExcepcion(ResourceNotFoundExcepcion excepcion, WebRequest webRequest){
		ErrorDetalles errorDetalles = new ErrorDetalles(new Date(), excepcion.getMessage(), webRequest.getDescription(false));
		return new ResponseEntity<>(errorDetalles,HttpStatus.NOT_FOUND);
	}
	
	@ExceptionHandler(BlogAppExcepcion.class)
	public ResponseEntity<ErrorDetalles> manejarBloAppExcepcion(BlogAppExcepcion excepcion, WebRequest webRequest){
		ErrorDetalles errorDetalles = new ErrorDetalles(new Date(), excepcion.getMessage(), webRequest.getDescription(false));
		return new ResponseEntity<>(errorDetalles,HttpStatus.BAD_REQUEST);
	}
	
	@ExceptionHandler(Exception.class)
	public ResponseEntity<ErrorDetalles> manejarGlobalExcepcion(Exception excepcion, WebRequest webRequest){
		ErrorDetalles errorDetalles = new ErrorDetalles(new Date(), excepcion.getMessage(), webRequest.getDescription(false));
		return new ResponseEntity<>(errorDetalles,HttpStatus.INTERNAL_SERVER_ERROR);
	}

}
